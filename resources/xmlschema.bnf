(*
  A pretty complete BNF definitation of xml-schema according to 
  https://www.w3schools.com/xml/schema_elements_ref.asp
*)

schema = eb xs <'schema'> attrs-with-sp 
		 ((include|import|redefine|annotation)*,(((simpleType|complexType|
		 group|attributeGroup)|element|attribute|notation),annotation*)*)
		 ee
include = eb xs <'include'> attrs-with-sp annotation? ee  
import = eb xs <'import'> attrs-with-sp annotation? ee 
redefine = eb xs <'redefine'> attrs-with-sp (annotation?|(simpleType|complexType|group|attributeGroup))* ee 	   
notation = eb xs <'notation'> attrs-with-sp annotation? ee 	   
choice = eb xs <'choice'> attrs-with-sp (annotation?,(element|group|choice|sequence|any)*) ee
element = eb xs <'element'> attrs-with-sp annotation?,(simpleType|complexType)?,(unique|key|keyref)* ee 
unique = eb xs <'unique'> attrs-with-sp (annotation?,(selector,field+)) ee 
key = eb xs <'key'> attrs-with-sp (annotation?,(selector,field+)) ee
selector = eb xs <'selector'> attrs-with-sp annotation? ee
field = eb xs <'field'> attrs-with-sp annotation? ee
keyref = eb xs <'keyref'> attrs-with-sp (annotation?,(selector,field+)) ee 
complexType = eb xs <'complexType'> attrs-with-sp 
	(annotation?,(simpleContent|complexContent|((group|all|
	 choice|sequence)?,((attribute|attributeGroup)*,anyAttribute?))))
	 ee
group = eb xs <'group'> attrs-with-sp (annotation?,(all|choice|sequence)?) ee
any = eb xs <'any'> attrs-with-sp annotation? ee 
simpleType = eb xs <'simpleType'> attrs-with-sp (annotation? (simpleType-restriction| list| union)) ee
anyAttribute = eb xs <'anyAttribute'> attrs-with-sp annotation? ee 
attributeGroup = eb xs <'attributeGroup'> attrs-with-sp annotation? (attribute|attributeGroup)* anyAttribute? ee
complexContent = eb xs <'complexContent'> attrs-with-sp (annotation?,(complexContent-restriction|extension)) ee
simpleContent = eb xs <'simpleContent'> attrs-with-sp (annotation?,(extension | simpleType-restriction)) ee
extension = eb xs <'extension'> attrs-with-sp (annotation?,((group|all|choice|sequence)?, ((attribute|attributeGroup)*,anyAttribute?))) ee 
all = eb xs <'all'> attrs-with-sp annotation? element* ee
sequence = eb xs <'sequence'> attrs-with-sp annotation?,(element|group|choice|sequence|any)* ee
union = eb xs <'union'> attrs-with-sp (annotation?,(simpleType*)) ee
memberTypes = qName (space qName)* 	   
list = eb xs <'list'> attrs-with-sp  (annotation?,(simpleType?)) ee 	   
simpleType-restriction = eb xs <'restriction'> attrs-with-sp 
                         (annotation?,(simpleType?,(minExclusive|minInclusive|
						  maxExclusive|maxInclusive|totalDigits|fractionDigits|
						  length|minLength|maxLength|enumeration|whiteSpace|pattern)*)) 
						  ee
simpleContent-restriction = eb xs <'restriction'> attrs-with-sp 
						(annotation?,(simpleType?,(minExclusive |minInclusive|
						maxExclusive|maxInclusive|totalDigits|fractionDigits|
						length|minLength|maxLength|enumeration|whiteSpace|pattern)*)?,
						((attribute|attributeGroup)*,anyAttribute?))
                        ee
complexContent-restriction = eb xs <'restriction'> attrs-with-sp
							 (annotation?,(group|all|choice|sequence)?,
							 ((attribute|attributeGroup)*,anyAttribute?))
							 ee                         
attribute = eb xs <'attribute'> attrs-with-sp annotation? simpleType? ee
fractionDigits = eb xs <'fractionDigits'> attrs-with-sp annotation? ee 
totalDigits = eb xs <'totalDigits'> attrs-with-sp annotation? ee 
whiteSpace = eb xs <'whiteSpace'> attrs-with-sp annotation? ee 
minInclusive = eb xs <'minInclusive'> attrs-with-sp annotation? ee
maxInclusive = eb xs <'maxInclusive'> attrs-with-sp annotation? ee
minExclusive = eb xs <'minExclusive'> attrs-with-sp annotation? ee
maxExclusive = eb xs <'maxExclusive'> attrs-with-sp annotation? ee
enumeration = eb xs <'enumeration'> attrs-with-sp annotation? ee
length = eb xs <'length'> attrs-with-sp annotation? ee
minLength = eb xs <'minLength'> attrs-with-sp annotation? ee
maxLength = eb xs <'maxLength'> attrs-with-sp annotation? ee
pattern = eb xs <'pattern'> attrs-with-sp annotation? ee
app-info = eb xs <'appinfo'> attrs-with-sp string ee 
documentation = eb xs <'documentation'> attrs-with-sp string ee  
annotation = eb xs <'annotation'> attrs-with-sp (app-info | documentation)* ee
decimalLit = ('+' | '-')? decimalDigit*
decimalDigit = #'[0-9]'
string = charValue*
charValue = #"[^\n]"
<space> = <#'[ \t\n,]+'>
os = <#'[ \t\n]*'>
<attrs-with-sp> = (space attrs)?
attrs = ab (<ns?> ident space string-literal)? (<',' os> <ns?> ident space string-literal)* ae
<eb> = < os '[' os ':'>
<ee> = <']'> 
<ab> = < '{'>
<ae> = <'}'>
ns = ident
<letter> 	 = #'[A-Za-z]'
<decimalDigit> = #'[0-9]'
octalDigit   = #'[0-7]'
hexDigit     = #'[0-9a-fA-F]'
string-literal = <'\"'> (letter | decimalDigit | #'[-_ /.:@\[\]]')* <'\"'>
ns-ident = ident? ident
qName = (letter { letter | decimalDigit | "_" })*
ident = ':' (letter { letter | decimalDigit | "_" })*
<xs> = (<'xs:'>)?